---
import Layout from "../layouts/layout.astro"
import Card from "../components/card.astro"
---

<Layout>
  <div class="flex flex-col items-center min-h-screen w-full">
    <div class="absolute dark:bg-black dark:border-0 bg-white border-b border-black/30 w-full h-[120vh]">&nbsp;</div>
    <div class="flex flex-col px-12 max-w-5xl w-full h-full">
      <section class="h-[120vh] items-start justify-between flex flex-col">
        <div class="flex flex-col relative justify-center h-screen w-full">
          <div class="text-7xl font-bold leading-[1.2] w-4/5" id="main-text">
            <div class="overflow-clip">
              <p class="main-text-item transform-gpu translate-y-full">
                Creating websites
              </p>
            </div>
            <div class="overflow-clip">
              <p
                class="main-text-item transform-gpu translate-y-full bg-clip-text bg-gradient-to-r from-blue-500 to-indigo-500 text-transparent"
              >
                with better UI & UX
              </p>
            </div>
            <div class="overflow-clip">
              <p class="main-text-item transform-gpu translate-y-full">
                is moy job
              </p>
            </div>
          </div>

          <div
            class="opacity-0 -translate-y-4 absolute bottom-12 self-center"
            id="arrow-down-icon"
          >
            <svg
              xmlns="http://www.w3.org/2000/svg"
              fill="none"
              viewBox="0 0 24 24"
              stroke-width="1.5"
              class="w-4 h-4 dark:stroke-white/70 stroke-black/70"
            >
              <path
                stroke-linecap="round"
                stroke-linejoin="round"
                d="M19.5 13.5L12 21m0 0l-7.5-7.5M12 21V3"></path>
            </svg>
          </div>
        </div>
      </section>

      <div id="marker-1" class="h-[20vh]"></div>

      <section class="h-[50vh] pt-16">
        <p class="text-5xl font-bold">
          <span
            class="text-transparent bg-clip-text bg-gradient-to-r from-indigo-400 to-blue-500"
            >Hello there!</span
          > üßë‚Äçüíª
        </p>
        <p class="text-2xl leading-normal mt-10">
          Hi There, My name is Songhun Cho <span
            class="font-normal text-lg dark:text-white/50 text-black/50">[s ∞ å≈ãhun tso]</span
          >, I'm a developer based in Korea. I'm passionate in making websites
          with better UI and UX.
        </p>
      </section>

      <section class="">
        <p class="text-5xl font-bold">My Projects</p>
        <p class="text-xl font-medium mt-4">Yes, these are my works.</p>
        <div class="flex flex-col items-center py-24 px-12 space-y-24">
          <Card />
        </div>
      </section>
    </div>
  </div>
</Layout>

<script>
  import gsap from "gsap"
  import ScrollTrigger from "gsap/ScrollTrigger"

  gsap.registerPlugin(ScrollTrigger)

  gsap.utils.toArray(".main-text-item").forEach((element, i, arr) => {
    const textItem = element as HTMLSpanElement

    const animation = gsap.to(textItem, {
      y: 0,
      delay: i * 0.19 + 0.3,
    })

    if (i >= arr.length - 1) {
      animation.eventCallback("onComplete", () => {
        gsap.to("#main-text", {
          scale: 1.08,
          duration: 0.4,
          delay: 0,
        })
      })
    }
  })

  gsap.to("#arrow-down-icon", { opacity: 1, delay: 0.8, y: 0 })

  gsap.to("#main-text", {
    y: -200,
    scrollTrigger: {
      trigger: "#marker-1",
      scrub: true,
    }
  })

  const getRatio = (el: HTMLElement) =>
    window.innerHeight / (window.innerHeight + el.offsetHeight)

  gsap.utils.toArray("div").forEach((div, i) => {
    const section = div as HTMLDivElement

    gsap.fromTo(
      section,
      {
        backgroundPosition: () =>
          i ? `50% ${-window.innerHeight * getRatio(section)}px` : "50% 0px",
      },
      {
        backgroundPosition: () =>
          `50% ${window.innerHeight * (1 - getRatio(section))}px`,
        ease: "none",
        scrollTrigger: {
          trigger: section,
          start: () => (i ? "top bottom" : "top top"),
          end: "bottom top",
          scrub: true,
          invalidateOnRefresh: true, // to make it responsive
        },
      }
    )
  })
</script>
